<HEAD>This plain text file contains essential variables to construct a 1/2/3D
    homo-/hetero-/single-/multi-junction solar cell and to optimise cell
    performance by simulating typical optical and electrical behaviours such
    as JV, Suns-Voc, QE, QSSPC, etc. via varying one or more parameters.

            Design of experiments (DOE) using WinSCP
1. Login to a server hosting the desired simulator and find this text file
2. Open this text file and edit variable values following the examples
3. Add desired comments and save this text file to finalize DOE
4. Right click 11ctrlsim.tcl and select execute to start batch running
5. Check 11ctrlsim.out or job scheduler output file for job progress
6. Execute 11ctrlsim.tcl again to stop the running batch if necessary
7. Download numbered results under 06out directory for further analysis
8. Execute 12savetpl.tcl to save key files in 07tpl for future reference
9. Execute 13loadtpl.tcl to load key files back from a specified template

Note 1: A variable takes a list (anything enclosed by braces. Braces can be
    omitted for a one-element list) as its value. Assigning lists to a
    variable to enable multiple runs with spaces as the separator. i.e.
    Multiple lists: 1 {2 3} {4 5 6} {7 8 9 10} ...
Note 2: Case insensitiveness do NOT apply to grammar rules. Only savvy users
    are supposed to modify grammar rules.
Note 3: Problem or issue? Email Dr. Fa-Jun MA (mfjamao@yahoo.com) (Thanks!)

<COMMENT>--- Simulation environment variable
Specification (after semicolon):
   0 Select a simulator: Sentaurus
   1 Choose a simulator_version: L-2016.03
   2 Cylindrical coordinate switch at Y = 0: C<ylindrical> | !Cylindrical
   3 Simulation type: O<ptical> | P<rocess> | Electrical
   4 Job scheduler: Local | PBS | SLURM
   5 For PBS and SLURM, max_walltime (i >= 1) [hr]: 1
   6 Max_memory (i >= 1) [GB]: 20
   7 Number of CPUs (i >= 1): 4

<GRAMMAR>{a = Sentaurus | s Sentaurus}
{a = U-2022.12 | `s E<-2010.12> F<-2011.09> G<-2012.06> H<-2013.03> I<-2013.12>
    J<-2014.09> K<-2015.06> L<-2016.03> M<-2016.12> N<-2017.09> O<-2018.06>
    P<-2019.03> Q<-2019.12> R<-2020.09> S<-2021.06> T<-2022.03> U<-2022.12>}
{a = !Cylindrical | s C<ylindrical> !Cylindrical}
{a = Electrical | s O<ptical> P<rocess> Electrical}
{a = Local | s P<BS> Local}
{== v-1 Local & `a | a = 1 | `i & `>= 1}
{== v-2 Local & `a | a = 20 | `i & `>= 1}
{== v-3 Local & `a | a = 4 | `i & `>= 1}

<VAR>SimEnv      {Sentaurus T-2022.03 !Cylindrical Electrical Local}

<TOOL>ST settings: Tool_label = sde Tool_name = sde

<COMMENT>--- Region generation variable
Follow the Cartesian coordinate system setting:
    X top -> bottom, Y left -> right, Z far -> near

Implicit method: Regions of a block shape (rectangle or cuboid) are described
    sequentially from the top to bottom layers, from left to right sections
    within each layer, from far to near regions within each section. Each region
    size is defined by thickness, width (2D/3D) and depth (3D). Additionally,
    a region should omit its thickness if it shares its layer with the previous
    region. Moreover, it should skip its thickness and width if the previous
    region and itself are within the same section. These regions are indexed
    from 1 to N and determine the size of the simulation domain from (0 0 0)
    to (XMax YMax ZMax).

The simulation domain is surrounded by dummy gas regions by default to easily
    reference the domain surfaces. The top gas layer is indexed as 0, the
    bottom layer N+1, the left layer N+2, the right N+3, the far N+4, the near
    N+5. In case of 2D cylindrical, the left is not added so the right is N+2
    instead. Additionally, only the top layer is added in case performing only
    optical simulation with raytrace.

Explicit method: Regions of special shapes (Block, Ellipse, VList, Pyramid,
    Cone, etc.) should be specified in advance. Regions labeled as "Keep" are
    indexed while the other two labels are not indexed. Regions labeled as
    "Remove" will be removed in the end so they are not within the final region
    list. Region labeled as "Merge" will be merged into the previous region.
    Additionally, if part of a region lies outside of the simulation domain,
    it will be trimmed. See examples for specifying special shapes

Suppose i,j,k are region indices, regions can be referred as follows:
    ri,j,k (Regions i, j and k), ri,j:k (Region i and regions from j to k)
    A region interface takes the form of ri/j and its direction is from i to j.

Specifications for regions employing the implicit method:
    1D: {Mat1 x1 Mat2 x2 Mat3 x3 ...}
    2D: {Mat1 x1 y1 Mat2 x2 y21 Mat3 y22 Mat4 x3 y3 ...}
    3D: {Mat1 x1 y1 z1 Mat2 x2 y21 z211 Mat3 z212 Mat4 y22 z221 Mat5 z222
        Mat6 x3 y3 z3 ...}

Specifications for regions employing the explicit method:
    Block (2D/3D) specify its diagonal vertices: mat Block Keep px1_y1/x2_y2
    Vertices (2D polygon) specify its vertices (>= 3): mat V K px1_y1 px2_y2 ...
    Ellipse (2D/3D) specify its center to its major radius followed by an
        optional MinR/MaxR: mat Ellipse Keep px1_y1/x2_y2 [MinR/MaxR]
    Cone (3D) specify its base center to its top center/vertex followed by the
        major base radius and optional top radius and MinR/MaxR:
        mat Cone Keep px1_y1_z1/x2_y2_z2 BaseR [TopR MinR/MaxR]
    Pyramid (3D) specify its base center to its top center/vertex followed by
        the major base radius and optional top radius, sides and MinR/MaxR:
        mat Pyramid Keep px1_y1_z1/x2_y2_z2 BaseR [TopR NSides MinR/MaxR]

<GRAMMAR>m
{`!a & n & `> 0 | s E<llipse> V<ertices> P<yramid> C<one> Block}
{n v1 & (a | `n & `> 0) | `!a & s K<eep>  M<erge> Remove}
{n v1 & (a | `n & `> 0) | `!a & (== v1 Vertices & `p | `pp)}
{(n v1 | == v1 Block) & `a | == v1 Ellipse & (a = 1 | `n & `> 0 & `<= 1)
    | `!a & == v1 (Pyramid|Cone) & (`n & `> 0) | `p}
{(n v1 | == v1 (Block|Ellipse) ) & `a
    | == v1 (Pyramid|Cone) & (a = 0 | `n & `>= 0) | `!a & `p}
{(n v1 | == v1 (Block|Ellipse) ) & `a | == v1 Cone & (a = 1 | `n & `> 0
    & `<= 1) | == v1 Pyramid & (a = 4 | `i & `> 2) | a | `p}
{(n v1 | == v1 (Block|Cone|Ellipse) ) & `a
    | == v1 Pyramid & (a = 1 | `n & `> 0 & `<= 1) | a | `p}
{(n v1 | != v1 Vertices) & `a | a | `p} ...

<VAR>RegGen      {{iaSi 0.006 50} {Silicon 165 50} {iaSi 0.006 50} {paSi 0.02
    45} {naSi 5} {Gas 0.1 44.5} {Gas 1} {Gas 4.5}}

<COMMENT>--- Region and interface fields variable
Supported constant region fields: Al(Aluminum) As(Arsenic) B(Boron) C Carbon
    F Fluorine Ge Germanium In Indium N Nitrogen P(Phosphorus) Sb Antimony
    x|y(MoleFraction) PD(PhotonDensity) and interface fields
    (from file)

Specification for region fields:
    0 Region: ri
    1 Region field 1: Al | As | B | C | F | Ge | In | N | P | Sb | x | y | PD
    2 Field concentration (n >= 0) [cm^-3]: 8e14
    3 Optional dopant activation switch: A<ctive> | !<Active>
    4 Optional region field 2 ...
Specification for interface fields:
    0 Interface: ri/j | px11_y11/x12_y12
    1 Interface field file 1: 03exp/B40.plx
    2 Optional field density ratio (n > 0): 1
    3 Optional lateral decay factor (0 <= n <= 1): 0.8
    4 Optional Interface field file 2 ...

<GRAMMAR>{r | rr | pp}
{`!a & r v0 & (!= g0 Semiconductor & `a | `s Al As B C F Ge In N P Sb x y PD)
    | `f}
{r v0 & (== v-1 {[xy]} & (`!a & `n & `>= 0 & `<= 1)
    | == v-1 (Al|As|B|C|F|Ge|In|N|P|Sb|PD) & (`!a & `n & `>= 0)
    | == v-2 (x|y|PD) & (a | `s Al As B C F Ge In N P Sb x y PD)
    | == v-2 (Al|As|B|C|F|Ge|In|N|P|Sb) & (a | `s Al As B C F Ge In N P Sb x y
    PD A<ctive> !<Active>) | == v-3 (Al|As|B|C|F|Ge|In|N|P|Sb) & (a | `s Al As
    B C F Ge In N P Sb x y PD)) | f v-1 & (a | n & `> 0 | `f)
    | f v-2 & (a | n & `>= 0 & `<= 1 | `f) | f v-3 & (a | `f)}
...

<VAR>FldAttr     {{r2 P 1.56e+15} {r4 B 1.41e+19} {r5 P 1.45e+19}}

<COMMENT>--- Interface attributes variable
Specify three types of region interfaces - SRH, metal contact and tunnelling

Specification for a fixed charge density and SRVs for SRH interface:
    0 Region interface: ri/j
    1 Fixed charge density [q/cm2]: 0
    2 Electron SRV (n >= 0) [cm/s]: 1e4
    3 Optional hole SRV (n >= 0) [cm/s]: 1e4
Specification for a trap file for SRH interface:
    0 Region interface: ri/j
    1 A trap file with settings for at least one trap: 03exp/IntfTrap.txt
    2 Optional trap density ratio (n > 0, apply to multiple traps): 1
    3 Optional electron capture cross section ratio (n > 0, multiple traps): 1
    4 Optional hole capture cross section ratio (n > 0, multiple traps): 1
Specification for a metal contact:
    0 Region interface: ri/j
    1 Contact name: c[0-9]
    2 Contact type: O<hmic> | E<qOhmic> | S<chottky> | Cu<rrent> | Ch<arge>
    3 Contact value ([V] | [A] | [C]): 0
    4 Distributed resistance for voltage contact (n >= 0) [ohmcm^2]: 0
    5 MS barrier for voltage contact [eV]: 0.5
    6 Electron recombination velocity (n > 0) for voltage contact [cm/s]: 1e6
    7 Optional hole recombination velocity (n > 0) for voltage contact [cm/s]: 1e6
Specification for a tunneling interface:
    0 Region interface: ri/j
    1 Tunnelling attributes: eT | hT | cT | TAT
    2 Tunnel setting file or trap file: 03exp/Tnl.txt | 03exp/TAT.txt
    3 Length of nonlocal mesh lines (n > 0) [um]: 5e-3
    4 Permeation (n >= 0) or trap density ratio (n > 0) for TAT: 0 | 1
    5 B2B for WKB calculation or barrier tunneling type for TAT: N<one> | F<ull>
        | S<imple> | U<psideDown>  | e | h | c

<GRAMMAR>rr
{`!a & n | f | `s c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 eT hT cT TAT}
{n v1 & (a | `n & `>= 0) | f v1 & (a = 1 | `n & `> 0) | == v1 {c\d} & (a = Ohmic
    | s S<chottky> E<qOhmic> Cu<rrent> Ch<arge> Ohmic) | `!a & `f}
{n v1 & (a | `n & `>= 0) | f v1 & (a = 1 | `n & `> 0)
    | == v1 {c\d} & (a = 0 | `n) | `!a & `n & `> 0}
{(n v1 | == v2 {C\w+} ) & `a | f v1 & (a = 1 | `n & `> 0)
    | == v1 {c\d} & (a = 0 | `n) | == v1 {[ceh]T} & (a = 0 | `n & `>= 0)
    | == v1 TAT & `!a & `n & `> 0}
{(n v1 | f v1 | == v2 {C\w+} ) & `a | == v1 {c\d} & (a = 0 | `n) | == v1 TAT
    & `!a & `s c e h | a = None | s F<ull> S<imple> U<psideDown> None}
{(n v1 | f v1 | == v2 {C\w+} ) & `a | == v1 {c\d} & (a = 1e7 | `n & `> 0) | a}
{(n v1 | f v1 | == v2 {C\w+} ) & `a | == v1 {c\d} & (a | `n & `> 0) | a}

<VAR>IntfAttr    {{r4/6 c0 Ohmic 0 0 0 1e7} {r5/8 c1 Ohmic 0 0 0 1e7} {r0/1
    1e+12 100000} {r4/7 0 10000000} {r5/7 0 10000000} {r1/2 0 190} {r3/2 0 190}}
    {{r4/6 c0 Ohmic 0 0 0 1e7} {r5/8 c1 Ohmic 0 0 0 1e7} {r0/1 0 0} {r4/7 0
    10000000} {r5/7 0 10000000} {r1/2 0 190} {r3/2 0 190}}

<COMMENT>--- Optical generation attributes variable
Specify four types of optical solver E(External), O(OBAM), T(TMM), R(Raytrace).
    For Raytrace, ARCs and BC(boundary condition)s need to be specified.

Specification for an external optical spectral profile:
    0 Optical window: ri/j | px11_y11/x12_y12
    1 Optical solver: E<xternal>
    2 Spectral photogeneration file: 02opt/Spectral_OG1D_Upright_170um.plx
Specification for the optical beam absorption method:
    0 Optical window: ri/j | px11_y11/x12_y12
    1 Optical solver: O<BAM>
Specification for the transfer matrix method:
    0 Optical window: ri/j | px11_y11/x12_y12
    1 Optical solver: T<MM>
    2 Refractive index n >= 1 or material file for TMM bottom medium: 2.3
    3 Extinction coefficient k >= 0 for TMM: 0
Specification for the raytrace solver:
    0 Optical window: ri/j | px11_y11/x12_y12
    1 Optical solver: R<aytrace>
    2 Number of rays (i > 0): 1000
    3 Deterministic or MonteCarlo: MonteCarlo | Deterministic
    4 Minimum fraction of Istop (0 < n < 1): 1e-4
    5 Maximum number of interfaces to pass (i > 0): 80000
Specification for antireflective coating for the raytrace solver:
    0 Optical window: ri/j
    1 Optical attribute: A<RC>
    2 Material 1 (from ri to rj)
    3 Thickness (n > 0) [um]
    4 Material file
    5 Material 2 ...
Specification for boundary conditions for the raytrace solver:
    0 Optical window: ri/j
    1 Reflection value (0 <= n <= 1) or based on Fresnel: n | F<resnel>
    2 Optional diffusive model: G<aussian> | R<andom> | Phong
    3 Characteristic value for diffusive model
Specification for a spectrum file for all solvers:
    0 Optical ID: Spec<trum>
    1 Spectrum file: 02opt/am15g_IEC60904-3-2008.txt
    2 Beginning wavelength (n > 0) [um]: 0.3
    3 Ending wavelength (n > 0) [um]: 1.2
    4 Step size (n > 0) [um]: 0.01
Specification for a monochromatic light for all optical solvers:
    0 Optical ID: Mono<chromatic>
    1 Wavelength of monochromatic light (n > 0) [um]: 0.3
    2 Intensity or power of monochromatic light (n > 0) [Wcm^-2]: 1e-3
Specification for incidence angles and a shading fraction for all solvers:
    0 Optical ID: Inci<dence>
    1 Fraction of shading (0 <= n <= 1): 0
    2 Incident angle (0 <= n <= 90) (Theta): 0
    3 Incident angle (0 <= n <= 90) (Phi): 0

<GRAMMAR>{pp | rr | o}
{== v0 Spectrum & (a = 02opt/am15g_IEC60904-3-2008.txt | `f)
    | == v0 Monochromatic & (a = 0.3 | `n & `> 0)
    | == v0 Incidence & (a = 0 | `n & `>= 0 & `<= 1)
    | !a & rr v0 & (n & `>= 0 & `<= 1 | `s A<RC> F<resnel> O<BAM> R<aytrace>
     T<MM> E<xternal>) | `s O<BAM> R<aytrace> T<MM> E<xternal>}
{== v0 Spectrum & (a = 0.3 | `n & `> 0)
    | == v0 Monochromatic  & (a = 1e-3 | `n & `> 0)
    | == v0 Incidence & (a = 0 | `n & `>= 0 & `<= 90)
    | == v1 ARC & (`!a & `m) | (n v1 | == v1 Fresnel ) & (a | s R<andom>
    G<aussian> Phong) | == v1 TMM & (a = 1 | n & `>= 1 | `m)
    | == v1 OBAM & `a | == v1 External & `!a & `f | `!a & `i & `> 0}
{== v0 Spectrum & (a = 1.2 | `n & `> v-1) | == v0 Monochromatic & `a
    | == v0 Incidence & (a = 0 | `n & `>= 0 & `<= 90)
    | == v1 ARC & (`!a & `n & `> 0) | ( n v1 | == v1 Fresnel ) & (== v2 Phong
    & (a = 1 | `i & `> 0) | == v2 Gaussian & (a = 0.1 | `n & `> 0)
    | == v2 Random  & (a = 0 | `i & `>= 0 & `<= 1000) | `a)
    | == v1 TMM & (n v2 & (a = 0 | `n & `>= 0) | `a)
    | == v1 (External|OBAM) & `a
    | a = MonteCarlo | s D<eterministic> MonteCarlo}
{== v0 Spectrum & (a = 0.01 | `n & `> 0 & `< v-1) | == v0 {[IM]\w+} & `a
    | == v1 ARC & (`!a & `f) | == v1 Raytrace & (a = 1e-4 | `n & `> 0 & `< 1)
    | `a}
{== v1 ARC & (a | `m) | == v1 Raytrace & (a = 100000 | `i & `> 0) | `a}
{== v1 ARC & (m v-1 & `!a & `n & `> 0 | n v-1 & `!a & `f | f v-1 & (a | `m))
    | `a}
...

<VAR>GopAttr     {{r0/1 External 02opt/HJT_165um_a-Si-i_6nm_Spectral.plx}
    {Spectrum 02opt/AM1.5g_IEC60904-3_2008.txt 0.3 1.2 0.01} {Monochromatic 0.3
    0.001}}

<COMMENT>--- Default attributes variable
Specification for mesh refinements:
    0 ID: M<esh>
    1 Maximum element size for region refinement (n > 0) [um]: 10
    2 Minimum element size for region refinement (n > 0) [um]: 0.05
    3 Minimum spaces for a region (i > 1): 8
    4 Minimum layer thickness for interface refinement (n > 0) [um]: 0.01
    5 Maximum number of interface layers (i > 1): 8
    6 Expansion ratio for interface refinement (n > 1): 1.5
    7 Minimum layer size for optical refinement (n > 0) [um]: 0.005
    8 Expansion ratio for optical refinement (n > 1): 1.1
Specification for numeric settings:
    0 ID: N<umeric>
    1 Bit length for a floating-point number: 64 | 80 | 128 | 256
Specification for other settings:
    0 ID: O<ther>
    1 Initial device temperature (n >= -273.15) [°C]: 25

<GRAMMAR>d
{== v0 Mesh & (a = 10 | `n & `> 0) | == v0 Numeric & (a = 64
    | s 80 128 256 64) | a = 25 | `n & `>= -273.15}
{== v0 Mesh & (a = 0.05 | `n & `> 0) | `a}
{== v0 Mesh & (a = 8 | `i & `> 1) | `a}
{== v0 Mesh & (a = 0.001 | `n & `> 0) | `a}
{== v0 Mesh & (a = 8 | `i & `> 1) | `a}
{== v0 Mesh & (a = 1.5 | `n & `> 1) | `a}
{== v0 Mesh & (a = 0.001 | `n & `> 0) | `a}
{== v0 Mesh & (a = 1.1 | `n & `> 1) | `a}

<VAR>DfltAttr    {{Mesh 10 0.05 8 0.001 8 1.5 0.001 1.1} {Numeric 64} {Other
    25}}

<TOOL>ST settings: Tool_label = sprocess Tool_name = sprocess

<COMMENT>--- Process sequences
Specification for process sequences:
    0 ID: Cal<ibrate>
    1 Advanced calibration version: T-2022.03
    2 User calibration file: sprocess_cal.fps
Specification for deposition
    0 ID: Dep<osit>
    1 Material: Oxide
    2 Thickness (n > 0) [um]: 0.2
    3 Deposition type: i<sotropic> | !isotropic
    4 Mask name: ! | a previous defined mask name
    5 Field 1: Al | As | B | C | F | Ge | In | N | P | Sb
    6 Field 1 value (n > 0): 1e19
    7 Field 2 ...
Specification for diffusion:
    0 ID: Dif<fuse>
    1 Diffusion time/temperature profile: 03exp/Diff/anneal_profile.plx
    2 Diffusion pressure: torr | Pa | atm
    3 Diffusion ambient gas 1: Cl2 | H2 | H2O | HCl | N2 | N2O | O2
    4 Diffusion partial pressure (n > 0): 1
    5 Diffusion ambient gas 2 ...
Specification for etch:
    0 ID: Etc<h>
    1 Material: Oxide
    2 Etch thickness (n > 0) [um]: 0.2
    3 Etch type: i<sotropic> | !isotropic
    4 Mask name: ! | a previous defined mask name
Specification for initialization:
    0 ID: Ini<t>
    1 Materal: Silicon
    2 Orientation: 111 | 110 | 100
    3 Region size: p0_0_0/1_1_1
    3 Optional field: Al | As | B | C | F | Ge | In | N | P | Sb
    4 Optional field value (n > 0) [cm^-3]: 1e15
Specification for implant:
    0 ID: Imp<lant>
    1 Implant species: As | B | P
    2 Energy (n > 0) [keV]: 250
    3 Dose (n > 0) [cm^-2]: 1e14
    4 Rotation angle (-360 <= n <= 360) of the wafer in the implanter [°]: -90
    5 Tilt angle (0 <= n < 90) normal to the substrate [°]: 7
Specification for photoresist mask:
    0 ID: Mas<k>
    1 Mask name: Mask0
    2 Mask type: positive | !positive
    3 Mask interface: p0_0/0_1
Specification for setting fields:
    0 ID: Sel<ect>
    1 Field: Interstitial
    2 Value or Tcl expression: 1e7
    3 Operation: d<elete> | store
    4 Optional material: Silicon
Specification for transform:
    0 ID: Tra<nsform>
    1 Operation: flip
    2 X-coordinate: x10
Specification for write 1D profile along x:
    0 ID: Wri<te>
    1 Position: p0_1

<GRAMMAR>{q}
{== v0 Calibrate & (a = U-2022.12 | `s E<-2010.12> F<-2011.09> G<-2012.06>
    H<-2013.03> I<-2013.12> J<-2014.09> K<-2015.06> L<-2016.03> M<-2016.12>
    N<-2017.09> O<-2018.06> P<-2019.03> Q<-2019.12> R<-2020.09> S<-2021.06>
    T<-2022.03> U<-2022.12>) | == v0 (Deposit|Etch) & (`!a & `m) | == v0 Diffuse
    & (`!a & `f) | == v0 Implant & (`!a & `s As B P) | == v0 Init  | == v0 Mask
    & (`!a & `== {Mask\d} ) | == v0 Write & (`!a & `p) | == v0 Transform & (`!a
    & s flip)}
{== v0 Write & `a | == v0 Calibrate & (a | `f) | == v0 (Deposit|Etch) & (`!a & `n
    & `> 0) | == v0 Diffuse & (a = atm | `s torr Pa atm) | == v0 Implant & (`!a
    & `n & `> 0) | == v0 Mask & (`!a & `s positive !positive) | == v0 Transform
    & (a | `x)}
{== v0 (Calibrate|Transform|Write) & `a | == v0 (Deposit|Etch) & (a = !isotropic
    | s i<sotropic> !isotropic) | == v0 Diffuse & (a = N2 | `s Cl2 H2 H2O HCl N2
    N2O O2) | == v0 Implant & (`!a & `n & `> 0) | == v0 Mask & (`!a & `pp)}
{== v0 (Calibrate|Mask|Transform|Write) & `a | == v0 (Deposit|Etch) & (a = !
    | == ! | `== {Mask\d} ) | == v0 Diffuse & (a = 1 | `n & `> 0 & `<= 1)
    | == v0 Implant & (a = -90 | `n & `>= -360 & `<= 360)}
{== v0 (Calibrate|Etch|Mask|Transform|Write) & `a | == v0 Deposit & (a
    | == {\w+} ) | == v0 Diffuse & (a | `s Cl2 H2 H2O HCl N2 N2O O2)
    | == v0 Implant & (a = 7 | `n & `>= 0 & `< 90)}
{== v0 (Calibrate|Etch|Implant|Mask|Transform|Write) & `a | == v0 Deposit
    & (e v-1 & `a | `!a & `n & `> 0) | == v0 Diffuse & (e v-1 & `a | `!a & `n
    & `> 0 & `< 1)}
{== v0 (Calibrate|Etch|Implant|Mask|Transform|Write) & `a | == v0 Deposit
    & (n v-1 & (a | == {\w+} ) | e v-1 & `a | `!a & `n & `> 0) | == v0 Diffuse
    & (n v-1 & (a | `s Cl2 H2 H2O HCl N2 N2O O2)
    | e v-1 & `a | `!a & `n & `> 0)}
...

<VAR>ProcSeq     {}

<TOOL>ST settings: Tool_label = sdevice Tool_name = sdevice

<COMMENT>--- Models and parameters variable
The default models for a semiconductor region: constant mobility, no bandgap
    narrowing, no Auger, no radiative with only SRH recombination enabled.
The default models for a silicon region: Philips unified mobility, Schenk BGN,
    Niewelt Auger, radiative and SRH recombination.
The grammar rules are quite challenging to set for models and parameters. It's
    necessary to write them clearly for easy maintenance.

Specifications for models and parameters for regions:
    0 Materal or region: ri | mat
    1 Material model parameter file: 01mdb/silicon.par
    2 Individual model: EA0 | Eg0 | NC300 | NV300 | DC | mt | mu | BGN
        | Aug | Rad | tau | Trap
    3 Model parameter for EA0, Eg0, NC300, NV300, DC, mt: value
      Models for BGN (bandgap narrowing): B<enettWilson>, d<elAlamo>,
        J<ainRoulston>, S<lotboom>, T<ableBGN>
    4 Same as index 4
Specification for carrier mobility:
    0 Materal or region: ri | mat
    1 Material model parameter file: 01mdb/silicon.par
    2 Individual model: mu
    3 Doping dependent models or electron mu (n > 0) [cm^2/(Vs)] for constant
        mu: A<rora> M<asetti> | 1417
    4 Optional hole mu (n > 0) [cm^2/(Vs)] for constant mu: 470.5
Specification for Auger recombination (With PMI Auger models, radiative is
    already included unless the photon recycling ratio is unit):
    0 Materal or region: ri | mat
    1 Material model parameter file: 01mdb/silicon.par
    2 Individual model: Aug
    3 Ceeh (n > 0) [cm^6/s] or PMI models or ! (disable Auger): 3.41e-31
        | A<ltermatt> R<ichter> N<iewelt> | !
    4 Optional Cehh (n > 0) [cm^6/s] or optional photon recycling ratio
        (0 <= n <= 1): 1.17e-31 | 0
Specification for radiative recombination:
    0 Materal or region: ri | mat
    1 Material model parameter file: 01mdb/silicon.par
    2 Individual model: Rad
    3 Radiative recombination coefficient (n > 0) [cm^3/s] or !: 4.73e-15 | !
Specification for lifetime values for SRH recombination:
    0 Materal or region: ri | mat
    1 Material model parameter file: 01mdb/silicon.par
    2 Individual model: SRH
    3 Electron lifetime (n > 0) [s] or !: 1e-3 | !
    4 Optional hole lifetime (n > 0) [s]: 1e-3
Specification for a trap file for SRH recombination:
    0 Materal or region: ri | mat
    1 Material model parameter file: 01mdb/silicon.par
    2 Individual model: Trap
    3 A trap file with settings for at least one trap: 03exp/BulkTrap.txt
    4 Optional trap density ratio (n > 0) (apply to multiple traps): 1
    5 Optional electron capture cross section ratio (n > 0) (multiple traps): 1
    6 Optional hole capture cross section ratio (n > 0) (multiple traps): 1

<GRAMMAR>{m | r} {`!a & `f}
{a | r v0 & (== g0 Insulator & `s EA0 Eg0 DC mt | == g0 Semiconductor
    & `s EA0 Eg0 NC300 NV300 DC mt mu BGN SRH Trap Aug Rad)}
{e v2 & `a | == v-1 (EA0|Eg0|NC300|NV300|DC|mt) & (`!a & `n & `> 0)
    | == v-1 mu & (`!a & n & `> 0 | `s A<rora> M<asetti>)
    | == v-1 BGN & `!a & `s B<enettWilson> d<elAlamo> J<ainRoulston>
        S<lotboom> T<ableBGN>
    | == v-1 Aug & (a | n & `> 0 | ( == m0 Silicon & `s EA0 Eg0 NC300 NV300 DC
        mt mu BGN SRH Trap Rad ! A<ltermatt> R<ichter> N<iewelt> | `s EA0 Eg0
        NC300 NV300 DC mt mu BGN SRH Trap Rad !))
    | == v-1 Rad & (a | n & `> 0
        | `s EA0 Eg0 NC300 NV300 DC mt mu BGN SRH Trap Aug !)
    | == v-1 SRH & (`!a & n & `> 0 | `s !)
    | == v-1 Trap & (`!a & `f)
    | == v-2 EA0 & (== g0 Insulator & (a | `s Eg0 DC mt) | == g0 Semiconductor
        & (a | `s Eg0 NC300 NV300 DC mt mu BGN SRH Trap Aug Rad))
    | == v-2 Eg0 & (== g0 Insulator & (a | `s EA0 DC mt) | == g0 Semiconductor
        & (a | `s EA0 NC300 NV300 DC mt mu BGN SRH Trap Aug Rad))
    | == v-2 DC & (== g0 Insulator & (a | `s EA0 Eg0 mt) | == g0 Semiconductor
        & (a | `s EA0 Eg0 NC300 NV300 mt mu BGN SRH Trap Aug Rad))
    | == v-2 mt & (a | n & `> 0 | (== g0 Insulator & `s EA0 Eg0 DC
        | == g0 Semiconductor & `s EA0 Eg0 NC300 NV300 DC mu BGN SRH Trap Aug
        Rad))
    | == v-2 NC300 & (a | `s EA0 Eg0 NV300 DC mt mu BGN SRH Trap Aug Rad)
    | == v-2 NV300 & (a | `s EA0 Eg0 NC300 DC mt mu BGN SRH Trap Aug Rad)
    | == v-2 mu & (a | n & `> 0
        | `s EA0 Eg0 NC300 NV300 DC mt BGN SRH Trap Aug Rad)
    | == v-2 BGN & (a | `s EA0 Eg0 NC300 NV300 DC mu mt SRH Trap Aug Rad)
    | == v-2 Aug & (n v-1 & (a | n & `> 0 | `s EA0 Eg0 NC300 NV300 DC mt mu BGN
        SRH Trap Rad) | == v-1 ! & (a | `s EA0 Eg0 NC300 NV300 DC mt mu BGN SRH
        Trap Rad) | a | n & `>= 0 & `<= 1 | `s EA0 Eg0 NC300 NV300 DC mt mu BGN
        SRH Trap Rad)
    | == v-2 Rad & (a | `s EA0 Eg0 NC300 NV300 DC mt mu BGN SRH Trap Aug)
    | == v-2 SRH & (a | n & `> 0 | `s EA0 Eg0 NC300 NV300 DC mt mu Trap
        BGN Aug Rad)
    | == v-2 Trap & (a | n & `> 0 | `s EA0 Eg0 NC300 NV300 DC mt mu SRH
        BGN Aug Rad)
    | == v-3 mt & (== g0 Insulator & (a | `s EA0 Eg0 DC) | == g0 Semiconductor
        & (a | `s EA0 Eg0 NC300 NV300 DC mu BGN SRH Trap Aug Rad))
    | == v-3 mu & (a | `s EA0 Eg0 NC300 NV300 DC mt BGN SRH Trap Aug Rad)
    | == v-3 Aug & (a | `s EA0 Eg0 NC300 NV300 DC mt mu BGN SRH Trap Rad)
    | == v-3 SRH & (a | `s EA0 Eg0 NC300 NV300 DC mt mu Trap BGN Aug Rad)
    | (== v-3 Trap | == v-4 Trap) & (a | n & `> 0
        | `s EA0 Eg0 NC300 NV300 DC mt mu SRH BGN Aug Rad)
    | == v-5 Trap & (a | `s EA0 Eg0 NC300 NV300 DC mt mu BGN SRH Aug Rad)}
...

<VAR>ModPar      {{r2 01mdb/Si_298.15K_2022Green.par SRH 0.0088 Aug Niewelt
    0.55} {r1 01mdb/a-Si-i_2015Ling.par Trap
    03exp/Traps/Bulk_a-Si-i_2015Ling.txt SRH !} {r3 01mdb/a-Si-i_2015Ling.par
    Trap 03exp/Traps/Bulk_a-Si-i_2015Ling.txt SRH !} {r4
    01mdb/a-Si-p_2015Ling.par Trap 03exp/Traps/Bulk_a-Si-p_2015Ling.txt SRH !}
    {r5 01mdb/a-Si-n_2015Ling.par Trap 03exp/Traps/Bulk_a-Si-n_2015Ling.txt SRH
    !}}

<COMMENT>--- Variable vary settings
Specify the following variables for varying - c# contact property (IntfAttr),
    SpecScaling spectrum intensity scaling, MonoScaling monochromatic light
    intensity scaling, Wavelength, etc. By varying one or more variables to
    mimic typical chacterization like DJV, LJV, QE, Suns-Voc, QSSPC, CV, etc.

Specification for setting contact value:
    0 Contact name defined in 'IntfAttr' c#: c1
    1 Contact value: 1
    2 # of intervals (0 -> no data are saved): 10 (on the linear scale)
  >=3 Value for taking snapshots: 0.5
Specification for changing contact attribute:
    0 Contact name defined in 'IntfAttr' c#: c1
    1 Contact attribute: Voltage | Current | Charge | Frequency
    2 Beginning frequency (n > 0): 1e3
    3 Ending frequency (n > 0): 1e3
    4 # of logarithmic intervals (i >= 1): 1
Specification for varying spectrum and monochromatic light intensity:
    0 Illumination type: S<pecScaling> or M<onoScaling>
    1 Intensity scaling goal (n > 0): 1
    2 # of intervals from 1e-5 (i >= 1): 10 (on the logarithmic scale)
  >=3 Value for taking snapshots: 0.3
Specification for varying wavelength:
    0 Variable identifier: W<avelength>
    1 Wavelength (n > 0) [um] goal: 1.2
    2 # of intervals (i >= 1): 10 (linear)
  >=3 Value for taking snapshots: 0.6
Specification for varying other variables (sdevice --parameter-names):
    0 Variable format: (Region or interface)/model/parameter(/initial value)
    1 Goal: 1
    2 # of intervals (i >= 1): 10 (linear)
  >=3 Value for taking snapshots: 0.3

<GRAMMAR>b
{`!a & == v0 {c\d} & (n | `s C<urrent> Ch<arge> F<requency> V<oltage>)
    | == v0 Wavelength & (`n & `> 0) | `n & `>= 0}
{== v1 {[CV]\w+} & `a | == v1 Frequency & (`!a & `n & `> 0)
    | a = 0 | `i & `>= 0}
{== v1 {[CV]\w+} & `a | == v1 Frequency & (`!a & `n & `>= v2) | a | `n & `< v1}
{== v1 {[CV]\w+} & `a | == v1 Frequency & (`!a & `i & `>= 1) | a | `n & `< v1}
{== v1 {[CFV]\w+} & `a | a | `n & `< v1}
...

<VAR>VarVary     {{SpecScaling 0.3 0} {MonoScaling 1 1} {Wavelength 1.2 90}
    {MonoScaling 0 0} {SpecScaling 1 0} {c0 0.8 160}}

<COMMENT>--- Extract field during variable varying and from snapshots
Specify a point pX_Y_Z [um] for extracting 1D structural fields from saved
snapshots from top to bottom. Y or Z cut is performed to get 1D fields.
Supported fields: (Dn = excess minority carrier density)
n(eDensity) p(hDensity) UA(AugerRecombination) UB(RadiativeRecombination)
US(SRHRecombination) UP(PMIRecombination) UD(eGapStatesRecombination)
Gop(OpticalGeneration) Eg(BandGap) BGN(BandgapNarrowing) ni(IntrinsicDensity)
EA(ElectronAffinity) EC(ConductionBandEnergy) EV(ValenceBandEnergy)
EFe(eQuasiFermiEnergy) EFh(hQuasiFermiEnergy) NA(AcceptorConcentration)
ND(DonorConcentration) PD(AbsorbedPhotonDensity)
x(xMoleFraction) Eg_eff(EffectiveBandGap) ni_eff(EffectiveIntrinsicDensity)
V(ElectrostaticPotential) q(SpaceCharge) UT(TotalRecombination)
eBT(eBarrierTunneling) hBT(hBarrierTunneling) eQt(eTrappedCharge)
hQt(hTrappedCharge) E(Abs(ElectricField-V)) mue(eMobility) muh(hMobility)

Specification for point extraction during variable varying:
    0 Point: p0_0_0
  >=1 Supported field: n
Specification for other extraction during variable varying:
    0 Window, region, interface: p0_0_0/1_1_1
    1 Operation: A<verage> | I<ntegrate> | M<aximum> | L<east>
    2 Supported field: n
  >=3 Optional coordinate printing (CP) for A|M|L or supported field
Specification for axis aligned cut from snapshots: (Band = "EA EC EV EFe EFh")
    0 Point: p0_250
    1 # of the front dummy layers (i >= 0): 1
    2 # of the back dummy layers (i >= 0): 1
  >=3 Supported field: Band
Specification for field integration from snapshots:
    0 Region or a window: r1 | p0_0/1_1
  >=1 Supported field: Gop

<GRAMMAR>{p | pp | r | rr}
{`!a & p v0 & (i & `>= 0 | `s Dn n p UA UB US UP UD Gop PD Eg EA EC EV EFe EFh
    BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E mue muh)
    | (!= {(Ave|Int|Max|Lea)\w*} & (r v0 | pp v0)) & `s n p UA UB US UP UD Gop
    PD Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E
    mue muh | `s Ave<rage> Int<egrate> Max<imum> Lea<st>}
{p v0 & (i v1 & `!a & `i & `>= 0 | a | `s Dn n p UA UB US UP UD Gop PD Eg EA EC
    EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E mue muh)
    | == v1 {(Ave|Int|Max|Lea)\w+} & (`!a & `s Dn n p UA UB US UP UD Gop PD Eg
    EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E mue
    muh) | a | `s n p UA UB US UP UD Gop PD Eg EA EC EV EFe EFh BGN ni NA ND
    x V Eg_eff ni_eff q UT eBT hBT eQt hQt E mue muh}
{p v0 & (i v1 & `!a & `s Band n p UA UB US UP UD Gop E Eg BGN ni N V x V Eg_eff
    ni_eff q UT eBT hBT eQt hQt E mue muh | a | `s Dn n p UA UB US UP UD Gop PD
    Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E
    mue muh)
    | == v1 {(Ave|Int|Max|Lea)\w+} & (== v-1 CP & (a | `s Dn n p UA UB
    US UP UD Gop PD Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT
    hBT eQt hQt E mue muh Ave<rage> Int<egrate> Max<imum> Lea<st>)
    | == v-1 {(Ave|Int|Max|Lea)\w+} & `!a & `s Dn n p UA UB US UP UD
    Gop PD Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt
    hQt E mue muh | a | `s CP Dn n p UA UB US UP UD Gop PD Eg EA EC EV EFe EFh
    BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E mue muh Ave<rage>
    Int<egrate> Max<imum> Lea<st>) | a | `s Dn n p UA UB US UP UD Gop PD
    Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E
    mue muh}
{p v0 & (i v1 & (a | `s Band n p UA UB US UP UD Gop E Eg BGN ni N V x V Eg_eff
    ni_eff q UT eBT hBT eQt hQt E mue muh) | a | `s Dn n p UA UB US UP UD Gop
    PD Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt
    E mue muh)
    | == v1 {(Ave|Int|Max|Lea)\w+} & (== v-1 CP & (a | `s Dn n p UA UB US UP
    UD Gop PD Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT
    hBT eQt hQt E mue muh Ave<rage> Int<egrate> Max<imum> Lea<st>)
    | == v-1 {(Ave|Int|Max|Lea)\w+} & `!a & `s Dn n p UA UB US UP UD
    Gop PD Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt
    hQt E mue muh | a | `s CP Dn n p UA UB US UP UD Gop PD Eg EA EC EV EFe EFh
    BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E mue muh Ave<rage>
    Int<egrate> Max<imum> Lea<st>) | a | `s Dn n p UA UB US UP UD Gop PD
    Eg EA EC EV EFe EFh BGN ni NA ND x V Eg_eff ni_eff q UT eBT hBT eQt hQt E
    mue muh}
...

<VAR>GetFld      {{p5_0/160_50 Average Dn} {p0_20 1 2 Band} {p0_48 1 2 Band}}

<TOOL>ST settings: Tool_label = svisual Tool_name = svisual

<COMMENT>--- Data extraction and analysis for variable varying 'VarVary'
Extract data from 'VarVary', prepare XY plots and make further analysis

Specification:
    0 A reference to VarVary step to extract data: v#
    1 Optional analysis of extracted data: JV
    2 Optional Dn (n > 0) [cm-3] for lifetime extraction: 1e15
    3 Optional JOG (n > 0) [mA/cm2] for iVoc extraction: 38

<GRAMMAR>v
{a | `s CV JV QE SunsVoc SunsJsc QSSPC RAT}
{== v-1 QSSPC & (a = 1e15 | `n & `> 0) | `a}
{== v-2 QSSPC & (a = 38 | `n & `> 0) | `a}

<VAR>PPAttr      {{v2 QE} {v5 JV}}

<TAIL>--- No variables afterwards
Put down any notes

